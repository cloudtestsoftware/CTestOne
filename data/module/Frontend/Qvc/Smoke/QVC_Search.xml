<?xml version="1.0" encoding="UTF-8"?>
<!--This page is a simple skeleton for building all test scenarios automation 
You should replace the injector with actual injector @taglib:your_taglib_name.your_injector_name 
However, you can add multiple different validators with multiple test steps within a single action container 
in combination with Seleneium and web service, mobile, junit, TestNg, SQL etc. 
to build complex end to end tests.  
You can also add assert containers within each validators.There are many types of operators and varaible combinations supported.   
Below are just 2 simple examples one is with hardcoded expected value and other is using parameter input either from dataset in XLS or local varible defined within Validator container 
<assert name="Verify your expected result" descriptor="VARCHAR" output="junit:v_read_from_browser_variable" value="Hardcoded Text Value" operator="Has" /> 
<assert name="Verify expected=@input_from_xls value" descriptor="VARCHAR" output="junit:v_read_from_browser_variable" value="@input_from_xls" operator="Has" />
Please reffer to your training manual or FAQ documents for details.  -->
<page name="22F6ED49F096047EE0505D0A1FAB4A8B" description="Smoke Test for search">


<action  name="2309A518FC1CC54DE0505D0A1FAB7AED"  dataset="global:xls.qvc_search_data" description="Search items from all departments">
	   

		<validator name="Step-1: search item @searchtext"  description=" This test is to search items on qvc site">
			
			<junit name="Test Browser Action= 2309A518FC1CC54DE0505D0A1FAB7AED or Give any meaningful name for this container">
				<testPackage name="com.testmax.runner">
					<testClass class="SeleniumTestRunner">
						
						<taglib>
						
						    <!-- Taglib is normally uses tag and or with combination of one or more injectors.
						     In this example, we are just calling the injector as taglib. 
						     But in real world taglib in CloudTest platform is containers of abstract injectors with or without any real HTML tag definition
						     To learn more about how to use injector please look at FAQ -->
						     
							@taglib:qvc_fashion.qvc_start
							@taglib:qvc_fashion.qvc_search
							@taglib:qvc_fashion.qvc_price
							
						</taglib>
						
						<injectors>
                           <!-- 
                             No Injectors are defined in this example. Injectors are actual implementation of HTML tag attributes with its xpath.
                             If a taglib contains injectors say A, B,C and if you put B in this section, then only B injector will be invoked.
                             A and C, will not be executed. To learn more about how to use injector please look at FAQ.
                            -->
						</injectors>
						
					</testClass>
				</testPackage>
			</junit>
			
		<!-- Below is a sample assert. You can add more assert object with different operators like Eq, Nq, Has,Lt,LtEq etc --> 
		
            <assert name="Verify price for item= @mainmenu : @searchtext " descriptor="NUMBER" output="junit:v_verify_item_value" value="@expected" operator="Gt" /> 
            
		</validator>


	</action>

</page>